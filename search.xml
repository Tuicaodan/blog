<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>How to setup comment feature for Hexo Next</title>
    <url>/blog/post/2021-11-08-How-to-setup-comment-feature-for-Hexo-Next/</url>
    <content><![CDATA[<h2 id="Overviews"><a href="#Overviews" class="headerlink" title="Overviews"></a>Overviews</h2><p>This is a tutorial for setting up the comment feature for Hexo + Next. There are a couple of options for this feature. I think Disqus is the option for easier implementation. However, the Disqus requires users to have a Disqus account before commenting. Another option is using Valine. The setup was a little bit complex than Disqus. But it will give more control for the comment information.</p>
<span id="more"></span>
<hr>
<h3 id="2021-11-09-Updates"><a href="#2021-11-09-Updates" class="headerlink" title="2021-11-09 Updates"></a>2021-11-09 Updates</h3><p>I found the Valine might have some conflicts with either the Next theme or multiple levels of headings in Markdown. When I have two or more levels of headings， after deployment, the Valine comment section will disappear. By checking the console, I found the error is <code>Uncaught TypeError: Valine is not a constructor</code>. Couldn’t find any similar situation or solution yet. Well, it was fun while it didn’t have the bug. So, at least for now, I have to switch to Disqus.</p>
<hr>
<h2 id="Disqus"><a href="#Disqus" class="headerlink" title="Disqus"></a>Disqus</h2><ul>
<li>Create a Disqus account. Choose the I want to use “Disqus on my site” option.</li>
<li>Create the <code>shortname</code> you entered.</li>
<li>You should be able to login to the manager site by using this URL:<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://YOUR_SHORTNAME.disqus.com/admin/settings/general</span><br></pre></td></tr></table></figure></li>
<li>Once you have the <code>shortname</code>, update the Next theme <code>_config.yml</code><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">disqus:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">shortname:</span> <span class="string">YOUR_SHORTNAME</span></span><br><span class="line">  <span class="attr">count:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">lazyload:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></li>
<li>Done. Now you have the Disqus comment feature for the site</li>
</ul>
<hr>
<h2 id="Valine"><a href="#Valine" class="headerlink" title="Valine"></a>Valine</h2><h3 id="The-basic"><a href="#The-basic" class="headerlink" title="The basic"></a>The basic</h3><ol>
<li><p>In order to implement Valine, you need a LeanCloud account.</p>
</li>
<li><p>Go to <a href="https://console.leancloud.app/login?from=/apps">LeanCloud</a>, register, and log in.</p>
</li>
<li><p>Create an app(developer)<br><img src="https://i.imgur.com/wCAS5uq.png" alt="Leancloud Settings"></p>
</li>
<li><p>In <code>Setting &gt; Security</code> turn off all the options other than <code>LeanStorage</code><br><img src="https://i.imgur.com/2WkEGst.png" alt="Leancloud Security Settings"></p>
</li>
<li><p>Create a new class in the <code>Data Storage &gt; Date</code>. Make sure the class has <code>No restrictions</code>.<br><img src="https://i.imgur.com/CN2mPf0.png" alt="Create a class"></p>
</li>
<li><p>In the <code>Setting &gt; App Key</code>, grab the <code>App ID</code> and <code>App Key</code>.</p>
</li>
<li><p>Update the Next theme <code>_config.yml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Valine.</span></span><br><span class="line"><span class="comment"># You can get your appid and appkey from https://leancloud.cn</span></span><br><span class="line"><span class="comment"># more info please open https://valine.js.org</span></span><br><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">appid:</span> <span class="string">xxxxxxxxx</span> <span class="comment"># your leancloud application appid</span></span><br><span class="line">  <span class="attr">appkey:</span> <span class="string">xxxxxxxxx</span> <span class="comment"># your leancloud application appkey</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">true</span> <span class="comment"># mail notifier , https://github.com/xCss/Valine/wiki</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">true</span> <span class="comment"># Verification code</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="comment"># comment box placeholder</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="comment"># gravatar style</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment"># custom comment header</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># pagination size</span></span><br></pre></td></tr></table></figure></li>
<li><p>Restart the server. Now you have the comment feature in the post</p>
</li>
</ol>
<hr>
<h3 id="Bits-and-bobs"><a href="#Bits-and-bobs" class="headerlink" title="Bits and bobs"></a>Bits and bobs</h3><h4 id="Remove-comment-feature-from-about-tags-categories-etc"><a href="#Remove-comment-feature-from-about-tags-categories-etc" class="headerlink" title="Remove comment feature from about/tags/categories/etc."></a>Remove comment feature from about/tags/categories/etc.</h4><p>I found that not only the post pages but also the about/tags/categories can have comments. This looks a little weird to me. I found there are two approaches too ban the comment feature in these sections.</p>
<ol>
<li>Approach 1<ul>
<li>The idea is to find the themes layout file and add conditions to the comment section.</li>
<li>For Next theme, the layout file locates at <code>themes/layout/_layout.sig</code></li>
<li>Find these lines in the file:<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">&#123;% include <span class="string">&#x27;_partials/comments.swig&#x27;</span> %&#125;</span><br></pre></td></tr></table></figure></li>
<li>Change it to:<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">&#123;%- <span class="keyword">if</span> page.type !== <span class="string">&#x27;about&#x27;</span> <span class="keyword">and</span> page.type !== <span class="string">&#x27;tags&#x27;</span> <span class="keyword">and</span> page.type !== <span class="string">&#x27;categories&#x27;</span> %&#125;</span><br><span class="line">    &#123;% include <span class="string">&#x27;_partials/comments.swig&#x27;</span> %&#125;</span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li>Approach 2<ul>
<li>add the following in the <code>scaffolds/post.md</code><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123; &#123; title &#125; &#125;</span><br><span class="line">date: &#123; &#123; date &#125; &#125;</span><br><span class="line">comments: true</span><br><span class="line">categories:</span><br><span class="line"><span class="section">tags:</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure></li>
<li>add the following in the about/tags/categories/etc files.<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2018-12-06 22:54:28</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line"><span class="section">comments: false</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ol>
<hr>
<h4 id="Change-the-“Valine”-in-the-post-header-to-“Comment”"><a href="#Change-the-“Valine”-in-the-post-header-to-“Comment”" class="headerlink" title="Change the “Valine” in the post header to “Comment”"></a>Change the “Valine” in the post header to “Comment”</h4><p>By default, the post header looks like this:<br><img src="https://i.imgur.com/WRJzAVX.png" alt="comment title"></p>
<p>I think the word “Comment” makes more sense than “ Valine”. Here is the solution:</p>
<ul>
<li>Find the <code>valine.js</code> file in <code>/themes/next/scripts/filters/comment/valine.js</code></li>
<li>Find this line in the file:<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">$&#123;<span class="built_in">iconText</span>(<span class="string">&#x27;far fa-comment&#x27;</span>, <span class="string">&#x27;valine&#x27;</span>)&#125;</span><br></pre></td></tr></table></figure></li>
<li>Change the line to this:<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">$&#123;<span class="built_in">iconText</span>(<span class="string">&#x27;far fa-comment&#x27;</span>, <span class="string">&#x27;comment&#x27;</span>)&#125;</span><br></pre></td></tr></table></figure></li>
<li>Restart the server</li>
</ul>
<hr>
<h4 id="Change-Valine-default-language"><a href="#Change-Valine-default-language" class="headerlink" title="Change Valine default language"></a>Change Valine default language</h4><p>The default language of Valine is Chinese. If you want to change it to English, here is the simple solution:</p>
<ul>
<li>Find the file <code>/themes/next/layout/_third-party/comments/valine.swig</code></li>
<li>Change the <code>lang</code> to:<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">lang       : <span class="string">&#x27;&#123;&#123; theme.valine.language &#125;&#125;&#x27;</span>,</span><br></pre></td></tr></table></figure></li>
</ul>
<hr>
<h4 id="Change-the-default-Avatar"><a href="#Change-the-default-Avatar" class="headerlink" title="Change the default Avatar"></a>Change the default Avatar</h4><p>Update the Next theme <code>_config.yml</code>:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="string">ture</span></span><br><span class="line">  <span class="attr">appid:</span> <span class="string">xxxxxx-xxxxx</span> <span class="comment"># Your leancloud application appid</span></span><br><span class="line">  <span class="attr">appkey:</span> <span class="string">xxxxxxxxxxx</span> <span class="comment"># Your leancloud application appkey</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">false</span> <span class="comment"># Mail notifier</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">true</span> <span class="comment"># Verification code</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">Just</span> <span class="string">go</span> <span class="string">go</span> <span class="comment"># Comment box placeholder</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">mp</span> <span class="comment"># (&#x27;&#x27;/mp/identicon/monsterid/wavatar/robohash/retro/hide)</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Comment</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>How to setup a blog using Hexo</title>
    <url>/blog/post/2021-11-09-How-to-setup-a-blog-using-Hexo/</url>
    <content><![CDATA[<h3 id="The-story"><a href="#The-story" class="headerlink" title="The story"></a>The story</h3><p>I keep listening about how important a developer should have a tech blog. A tech blog could both benefit other people and me. After wasting a couple of months to do so, I finally take my step. </p>
<span id="more"></span>

<h3 id="Why-did-I-choose-Hexo"><a href="#Why-did-I-choose-Hexo" class="headerlink" title="Why did I choose Hexo"></a>Why did I choose Hexo</h3><p>I chose Hexo + GitHub for my blog. The most important reason is that I want to have full control of the blog while not paying too much attention to the server/domain/etc. The Hexo + GitHub combination gives me lots of flexibility on the styling, theme, third-party plugin or so. Here are some advantages I believe are quite important</p>
<ul>
<li>Hexo generates a static webpage which means the speed it fast</li>
<li>Hexo uses Markdown for posting</li>
<li>The deployment is really straightforward.</li>
<li>If you want, you could make the blog really complex (need to understand some source code though)</li>
<li>All the files were stored on GitHub (free and safer than other free hosts?)</li>
</ul>
<h3 id="What-is-Hexo"><a href="#What-is-Hexo" class="headerlink" title="What is Hexo"></a>What is Hexo</h3><p>Here is the quote from Hexo website:</p>
<blockquote>
<p>Hexo is a fast, simple and powerful blog framework. You write posts in <a href="http://daringfireball.net/projects/markdown/">Markdown</a> (or other markup languages) and Hexo generates static files with a beautiful theme in seconds.</p>
</blockquote>
<h3 id="Install-Hexo"><a href="#Install-Hexo" class="headerlink" title="Install Hexo"></a>Install Hexo</h3><ol>
<li>Before installing Hexo, you should have Git, Node.js, npm installed. And your git should be configured already.</li>
<li>Here is the command from the office doc: <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
</li>
<li>After installation, use this command to check whether the Hexo is installed correctly <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure>
</li>
<li>initiate Hexo: <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init blog-folder-name</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> blog-foler-name</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>
</li>
<li>static files will be generated and run server <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>
</li>
<li>Then you should be able to see your Hexo blog on the <code>localhost:4000</code></li>
</ol>
<h4 id="The-problem"><a href="#The-problem" class="headerlink" title="The problem"></a>The problem</h4><ul>
<li>I had some issues with Hexo installation. After installation, the <code>hexo -v</code> command will return this error: <code>command not found: hexo</code>.</li>
<li>A little background story: I changed the location of npm global packages since I want to avoid using <code>sudo</code> for npm packages installation.</li>
<li>So I believe the problem that I cannot run <code>hexo</code> command is because of the changes of the environment variables.</li>
</ul>
<h4 id="The-solution"><a href="#The-solution" class="headerlink" title="The solution"></a>The solution</h4><ol>
<li>After several hours of searching, I realized the easiest way is to install and use Hexo locally.</li>
<li>I create a folder, run <code>npm init</code> in the folder and then install hexo <code>npm install hexo-cli</code> </li>
<li>use <code>npx hexo -v</code> to check whether I have hexo installed. </li>
<li>initiate Hexo and rest are the same as the above. Besides, you have to use <code>npx</code> to run hexo locally: <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npx hexo init hexo-blog</span><br></pre></td></tr></table></figure>
</li>
<li>cd to the hexo-blog folder and do dependencies installation. <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> hexo-blog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>
</li>
<li>The generations and server running commands are: <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npx hexo g</span><br><span class="line">npx hexo s</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="Create-a-GitHub-repository-for-the-blog"><a href="#Create-a-GitHub-repository-for-the-blog" class="headerlink" title="Create a GitHub repository for the blog"></a>Create a GitHub repository for the blog</h3><ol>
<li>Create a new repository, make sure it is public <img src="https://i.imgur.com/ZAOvxhq.png" alt="create a new repository"></li>
<li>Check the <code>repository &gt; Settings &gt; Pages &gt; Source</code> is correct <img src="https://i.imgur.com/ngN3TfF.png" alt="pages setting"></li>
</ol>
<h3 id="Deploy-Hexo-blog-to-GitHub"><a href="#Deploy-Hexo-blog-to-GitHub" class="headerlink" title="Deploy Hexo blog to GitHub"></a>Deploy Hexo blog to GitHub</h3><ol>
<li>Go to the blog folder, open the site setting file <code>_config.yml</code> and change the <code>deploy</code> section to your GitHub repository address: <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">https://github.com/[Your-GitHub-Username]/[repo-name]</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure>
</li>
<li>Install hexo deployer <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git</span><br></pre></td></tr></table></figure>
</li>
<li>clean the bin, generate, and then deploy <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npx hexo clean</span><br><span class="line">npx hexo g</span><br><span class="line">npx hexo d</span><br></pre></td></tr></table></figure>
</li>
<li>Now you should be able to see the default Hexo blog using the URL provided in the GitHub Pages.</li>
</ol>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>blog</tag>
      </tags>
  </entry>
</search>
